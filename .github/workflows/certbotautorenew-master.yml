# We can't include certbot renew in the main Docker image because if it runs more than a few times it gets throttled by Let's Encrypt. 
# Instead, we'll use GitHub Actions to run certbot renew once a month and then copy the certificates to Cloud Storage.

name: Certbot Auto Renew - master

on:
  schedule:
    - cron: '0 13 1 * *' # Run at 13:00 on the first day of the month
  workflow_dispatch: # Manually run the workflow

jobs:
  renew_master:
    runs-on: ubuntu-latest
    env:
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
      BUCKET_NAME: ${{ vars.BUCKET_NAME }}
      CERT_EMAIL: ${{ vars.CERT_EMAIL }}
      SUB_DOMAIN: www
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.DEV_GOOGLE_APPLICATION_CREDENTIALS }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Certbot
      run: |
        sed -i 's/this_is_dumb/${{ secrets.CLOUDFLARE_API_TOKEN }}/g' cloudflare.ini
        chmod 600 cloudflare.ini
        docker run -v "$(pwd)/letsencrypt:/etc/letsencrypt" -v "$(pwd)/cloudflare.ini:/etc/letsencrypt/cloudflare.ini" certbot/dns-cloudflare certonly --force-renew --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini --dns-cloudflare-propagation-seconds 60 -d ${{ env.DOMAIN_NAME }} -d ${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }} --agree-tos --email ${{ env.CERT_EMAIL }} --non-interactive
    - name: Change ownership of letsencrypt directory
      run: sudo chown -R $(whoami) ./letsencrypt
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
    - name: Copy certificates to Google Cloud Storage
      run: |
        gsutil cp ./letsencrypt/live/${{ env.DOMAIN_NAME }}/fullchain.pem gs://${{ env.BUCKET_NAME }}/${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }}/
        gsutil cp ./letsencrypt/live/${{ env.DOMAIN_NAME }}/privkey.pem gs://${{ env.BUCKET_NAME }}/${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }}/