name: Certbot Auto Renew

on:
  schedule:
    - cron: '0 12 1 * *' # Run at 12:00 on the first day of the month
    - cron: '0 13 1 * *' # Run at 13:00 on the first day of the month
  workflow_dispatch: # Manually run the workflow

jobs:
  renew_dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }} 
      SUB_DOMAIN: ${{ github.ref == 'refs/heads/dev' && 'dev' || github.ref == 'refs/heads/master' && 'www' || '' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Certbot
      run: |
        docker run --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --env AWS_REGION=${{ secrets.AWS_REGION }} -v "$(pwd)/letsencrypt:/etc/letsencrypt" certbot/dns-route53 certonly --force-renew --dns-route53 -d ${{ env.DOMAIN_NAME }} -d ${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }} --agree-tos --email 3410jdk@gmail.com --non-interactive
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Change ownership of letsencrypt directory
      run: sudo chown -R $(whoami) ./letsencrypt
    - name: Copy certificates to S3
      run: |
        aws s3 cp ./letsencrypt/live/${{ env.DOMAIN_NAME }}/fullchain.pem s3://jdk3410certs/${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }}/
        aws s3 cp ./letsencrypt/live/${{ env.DOMAIN_NAME }}/privkey.pem s3://jdk3410certs/${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }}/

  renew_master:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }} 
      SUB_DOMAIN: ${{ github.ref == 'refs/heads/dev' && 'dev' || github.ref == 'refs/heads/master' && 'www' || '' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Certbot
      run: |
        docker run --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --env AWS_REGION=${{ secrets.AWS_REGION }} -v "$(pwd)/letsencrypt:/etc/letsencrypt" certbot/dns-route53 certonly --force-renew --dns-route53 -d ${{ env.DOMAIN_NAME }} -d ${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }} --agree-tos --email 3410jdk@gmail.com --non-interactive
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Change ownership of letsencrypt directory
      run: sudo chown -R $(whoami) ./letsencrypt
    - name: Copy certificates to S3
      run: |
        aws s3 cp ./letsencrypt/live/${{ env.DOMAIN_NAME }}/fullchain.pem s3://jdk3410certs/${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }}/
        aws s3 cp ./letsencrypt/live/${{ env.DOMAIN_NAME }}/privkey.pem s3://jdk3410certs/${{ env.SUB_DOMAIN }}.${{ env.DOMAIN_NAME }}/